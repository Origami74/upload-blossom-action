import { NostrEvent, NostrFilter, NostrRelayCLOSED, NostrRelayEOSE, NostrRelayEVENT, NRelay } from "@jsr/nostrify__types";
import { Nostr } from "nostr-tools";
import { AbstractSimplePool } from "nostr-tools/pool";
export interface NSimplePoolOpts {
  verifyEvent?: Nostr['verifyEvent'];
  trackRelays?: boolean;
  trustedRelayURLs?: Set<string>;
}
/**
 * NRelay implementation built on top of SimplePool from nostr-tools.
 */ export declare class NSimplePool implements NRelay {
  pool: AbstractSimplePool;
  constructor(opts?: NSimplePoolOpts);
  get seenOn(): Map<string, Set<string>>;
  req(filters: NostrFilter[], opts?: {
    signal?: AbortSignal;
    relays?: string[];
  }): AsyncIterable<NostrRelayEVENT | NostrRelayEOSE | NostrRelayCLOSED>;
  event(event: NostrEvent, opts?: {
    signal?: AbortSignal;
    relays?: string[];
  }): Promise<void>;
  query(filters: NostrFilter[], opts?: {
    signal?: AbortSignal;
    relays?: string[];
  }): Promise<NostrEvent[]>;
  /** Disconnect from the given relay URLs. */ disconnect(relays: string[]): void;
  close(): Promise<void>;
}
//# sourceMappingURL=NSimplePool.d.ts.map