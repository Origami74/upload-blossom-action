import HTTPError from "../error.js";
import { encodeAuthorizationHeader } from "../auth.js";
import { getPaymentRequestFromHeaders } from "../helpers.js";
/** Deletes a blob to a server */
export async function deleteBlob(server, hash, opts) {
    const url = new URL("/" + hash, server);
    let res = await fetch(url, { signal: opts?.signal, method: "DELETE" });
    // handle auth and payment
    switch (res.status) {
        case 401: {
            const auth = opts?.auth || (await opts?.onAuth?.(server, hash));
            if (!auth)
                throw new Error("Missing auth handler");
            // Try delete with auth
            res = await fetch(url, {
                signal: opts?.signal,
                method: "DELETE",
                headers: { Authorization: encodeAuthorizationHeader(auth) },
            });
            break;
        }
        case 402: {
            if (!opts?.onPayment)
                throw new Error("Missing payment handler");
            const { getEncodedToken } = await import("@cashu/cashu-ts");
            const request = getPaymentRequestFromHeaders(res.headers);
            const token = await opts.onPayment(server, hash, request);
            const payment = getEncodedToken(token);
            // Try delete with payment
            res = await fetch(url, {
                signal: opts?.signal,
                method: "DELETE",
                headers: { "X-Cashu": payment },
            });
            break;
        }
    }
    // handle errors
    await HTTPError.handleErrorResponse(res);
    // return blob descriptor
    return res.ok;
}
